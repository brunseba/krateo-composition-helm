# Default values for cnpg-postgres-cluster
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Cluster configuration
cluster:
  name: "postgres-cluster"
  instances: 3
  primaryUpdateStrategy: "unsupervised"
  
  # PostgreSQL configuration
  postgresql:
    parameters:
      max_connections: "200"
      shared_buffers: "256MB"
      effective_cache_size: "1GB"
      work_mem: "4MB"
      maintenance_work_mem: "64MB"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      wal_buffers: "16MB"
      checkpoint_completion_target: "0.9"
      log_min_duration_statement: "1000"
      log_checkpoints: "on"
      log_lock_waits: "on"
      track_io_timing: "on"
      
  # Resources
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"
      
  # Storage
  storage:
    size: "50Gi"
    storageClass: ""
    
  # WAL storage
  walStorage:
    size: "10Gi"
    storageClass: ""
    
  # Bootstrap
  bootstrap:
    initdb:
      database: "app_db"
      owner: "app_owner"
      secret:
        name: "postgres-credentials"
        
  # Monitoring
  monitoring:
    enabled: true
    customQueriesConfigMap:
      - name: "postgres-queries"
        key: "queries.yaml"
        
  # Backup configuration
  backup:
    enabled: false
    target: "prefer-standby"
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: ""
      s3Credentials:
        accessKeyId:
          name: "backup-s3-credentials"
          key: "ACCESS_KEY_ID"
        secretAccessKey:
          name: "backup-s3-credentials"
          key: "SECRET_ACCESS_KEY"
        region:
          name: "backup-s3-credentials"
          key: "REGION"
          
  # Pooler configuration
  pooler:
    enabled: true
    instances: 2
    type: "rw"
    pgbouncer:
      poolMode: "transaction"
      parameters:
        max_client_conn: "200"
        default_pool_size: "25"
        
# Security
security:
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
    
# Affinity and scheduling
affinity:
  enablePodAntiAffinity: true
  topologyKey: "kubernetes.io/hostname"
  
nodeSelector: {}
tolerations: []

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""
